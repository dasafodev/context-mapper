/* SaludTech de los Alpes (STA) - Domain Model */
/* Domain Parts Definition */
Domain SaludTech {
    Subdomain DataPartnership {
        type = CORE_DOMAIN
    }

    Subdomain DataIngestion {
        type = CORE_DOMAIN
    }

    Subdomain AIAccess {
        type = CORE_DOMAIN
    }

    Subdomain Compliance {
        type = SUPPORTING_DOMAIN
    }

    Subdomain Billing {
        type = SUPPORTING_DOMAIN
    }

    Subdomain Identity {
        type = GENERIC_SUBDOMAIN
    }

}

ContextMap SaludTechContextMap {
    contains DataPartnershipContext
    contains DataIngestionAndAnonymizationContext
    contains AIDataAccessContext
    contains ComplianceAndSecurityContext
    contains BillingAndMonetizationContext
    contains IdentityAndUserManagementContext

    /* Define relationships between bounded contexts */
    DataPartnershipContext [U, OHS, PL]->[D] DataIngestionAndAnonymizationContext

    DataIngestionAndAnonymizationContext [U, OHS, PL]->[D] AIDataAccessContext

    AIDataAccessContext [U, OHS, PL]->[D] BillingAndMonetizationContext

    DataPartnershipContext [U, OHS, PL]->[D] BillingAndMonetizationContext

    ComplianceAndSecurityContext [U, OHS, PL]->[D] DataIngestionAndAnonymizationContext

    IdentityAndUserManagementContext [U, OHS, PL]->[D] AIDataAccessContext
}

/* Core Domain: Data Partnership */
BoundedContext DataPartnershipContext implements DataPartnership {
    domainVisionStatement = "Crear y mantener relaciones con proveedores de salud para obtener imágenes médicas y diagnósticos de forma segura y rentable, asegurando el crecimiento y la fuente principal de datos para STA."

    Module partnership {
        basePackage = com.sta.partnership
        Aggregate DataPartnerManagement {
            Entity DataPartner {
                String partnerId
                String name
                String country
                String contractType
                String compensationModel
            }
            Entity Contract {
                String contractId
                String partnerId
                Date startDate
                Date endDate
                String terms
            }
        }
    }
}

/* Core Domain: Data Ingestion & Anonymization */
BoundedContext DataIngestionAndAnonymizationContext implements DataIngestion {
    domainVisionStatement = "Ingerir, procesar y anonimizar grandes volúmenes de imágenes médicas, garantizando el cumplimiento regulatorio y la calidad de los datos."
    
    Module imageProcessing {
        basePackage = com.sta.processing
        Aggregate ImageProcessing {
            Entity RawMedicalImage {
                String imageId
                String partnerId
                String modality
                String region
                String status
                Date uploadTimestamp
            }
            Entity AnonymizedMedicalImage {
                String anonImageId
                String originalImageId
                Date anonymizationTimestamp
                String tokenizedPatientId
                String metadata
            }
        }
    }
}

/* Core Domain: AI Data Access */
BoundedContext AIDataAccessContext implements AIAccess {
    domainVisionStatement = "Facilitar la búsqueda, filtrado y descarga de imágenes médicas anonimizadas y sus metadatos para desarrolladores de IA y clientes."
    
    Module catalog {
        basePackage = com.sta.catalog
        Aggregate DataCatalog {
            Entity ImageCatalogEntry {
                String anonImageId
                String modality
                String region
                String pathology
                String demographicInfo
                String availableFormats
            }
        }
        Aggregate Subscription {
            Entity Plan {
                String planId
                String planName
                String featureList
                BigDecimal price
            }
            Entity Subscriber {
                String subscriberId
                String planId
                Date subscriptionStart
                Date subscriptionEnd
                String usageMetrics
            }
        }
    }
}

/* Supporting Domain: Compliance & Security */
BoundedContext ComplianceAndSecurityContext implements Compliance {
    domainVisionStatement = "Mantener y monitorear el cumplimiento con HIPAA y otras regulaciones locales, garantizando la seguridad y privacidad de los datos médicos a nivel global."
    
    Module compliance {
        basePackage = com.sta.compliance
        Aggregate ComplianceManagement {
            Entity RegulationPolicy {
                String policyId
                String region
                String regulationName
                String details
            }
            Entity ComplianceAudit {
                String auditId
                String policyId
                Date date
                String findings
                String status
            }
        }
    }
}

/* Supporting Domain: Billing & Monetization */
BoundedContext BillingAndMonetizationContext implements Billing {
    domainVisionStatement = "Gestionar los planes de suscripción, la facturación y la compensación a proveedores de salud, asegurando la sostenibilidad económica de STA."
    
    Module billing {
        basePackage = com.sta.billing
        Aggregate Billing {
            Entity Invoice {
                String invoiceId
                String subscriberId
                BigDecimal amount
                Date invoiceDate
                boolean paid
            }
            Entity Payment {
                String paymentId
                String invoiceId
                String paymentMethod
                BigDecimal amount
                Date paymentDate
            }
        }
        Aggregate PartnerCompensation {
            Entity CompensationRecord {
                String recordId
                String partnerId
                Long usageVolume
                BigDecimal payoutAmount
                Date payoutDate
            }
        }
    }
}

/* Generic Domain: Identity & User Management */
BoundedContext IdentityAndUserManagementContext implements Identity {
    domainVisionStatement = "Proporcionar autenticación, autorización y gestión de cuentas de usuario para toda la plataforma de STA."
    
    Module users {
        basePackage = com.sta.users
        Aggregate UserDirectory {
            Entity UserAccount {
                String userId
                String username
                // String email
                String encryptedPassword
                String role
            }
        }
    }
}

